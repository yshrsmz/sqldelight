buildscript {
  apply from: "$rootDir/gradle/dependencies.gradle"

  repositories {
    mavenCentral()
    google()
    jcenter()
    gradlePluginPortal()
    maven {
      url 'https://jitpack.io'
    }
  }

  dependencies {
    classpath deps.plugins.download
    classpath deps.plugins.kotlin
    classpath deps.plugins.dokka
    classpath deps.plugins.intellij
    classpath deps.plugins.android
    classpath deps.plugins.grammarKit

    // Used for the sample
    classpath "com.squareup.sqldelight:gradle-plugin:${versions.sqldelight}"
  }
}

apply from: "$rootDir/gradle/updateDependencies.gradle"
apply from: "$rootDir/gradle/dependencies.gradle"

allprojects {
  repositories {
    mavenCentral()
    google()
    jcenter()
  }

  tasks.withType(Test) {
    testLogging {
      events = ["failed", "skipped", "passed"]
      exceptionFormat "full"
    }
  }

  group = GROUP
  version = VERSION_NAME
}


def addDependency(Upload task, String groupId, String artifactId, String version, String type) {
  task.repositories.withType(org.gradle.api.artifacts.maven.MavenDeployer) { mavenDeployer ->
    task.doFirst {
      mavenDeployer.pom.whenConfigured {
        // For whatever reason we can't 'new' these ourselves. Clone an existing instance instead.
        def dependency = it.dependencies.get(0).clone()
        dependency.groupId = groupId
        dependency.artifactId = artifactId
        dependency.version = version
        dependency.type = type
        it.dependencies.add(dependency)
      }
    }
  }
}

wrapper {
  gradleVersion = '5.1.1'
  //noinspection UnnecessaryQualifiedReference
  distributionType = Wrapper.DistributionType.ALL
}
